# -*- coding: utf-8 -*-
"""Task-1( Predict Restaurant Ratings).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lv4P_deyokALuw6Q9ndyrU786tyPAXLk

**Importing** **Libraries**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score,accuracy_score
from sklearn.preprocessing import LabelEncoder

"""**Uploading Dataset**"""

df= pd.read_csv('/content/Dataset .csv')

df.head()

df.info()

"""**`Null Value Inspection`**"""

df.isnull().sum()

"""**Duplicate Value Inspection**"""

df.duplicated().sum()

desc = df.dtypes

"""**Converting Categorical Text Labels Into Numerical Values**"""

le=LabelEncoder()

for col in df.columns:
  if df[col].dtype=='object':
    df[col]=le.fit_transform(df[col])

df

"""**Removing Unwanted Data**"""

df = df.drop(columns=['Restaurant ID', 'Restaurant Name', 'Address', 'Rating color', 'Rating text', 'Locality Verbose'
])

df['Cuisines'].fillna('Unknown', inplace=True)

df

"""**Data Separation**"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

X = df.drop(['Aggregate rating'], axis=1)
y = df['Aggregate rating']

"""Model **Selection**"""

model = RandomForestRegressor(random_state=42)

"""**Data Fitting Process**"""

model.fit(X_train, y_train)

"""**Predicting Values**"""

predictions = model.predict(X_test)

"""**Performance Metrics**"""

mse = mean_squared_error(y_test, predictions)*100
r2 = r2_score(y_test, predictions)*100
print("Mean Squared Error:", mse)
print("RÂ² Score:", r2)

"""**Analysis**"""

importances = model.feature_importances_
feature_names = X.columns

feat_imp_df = pd.DataFrame({'Feature': feature_names,'Importance': importances})
feat_imp_df = feat_imp_df.sort_values(by='Importance', ascending=True)

plt.figure(figsize=(10, 6))
plt.barh(feat_imp_df['Feature'], feat_imp_df['Importance'], color='teal')
plt.xlabel('Importance')
plt.title('Feature Importance in Restaurant Rating Prediction')
plt.tight_layout()
plt.show()

