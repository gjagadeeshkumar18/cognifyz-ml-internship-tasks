# -*- coding: utf-8 -*-
"""Task-3(Cuisine Classification).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AzklIuktcsQqFQzEGHDx-wFhnQdSsZ7s

*   **Task-3-->Cuisine Classification**
*   **Importing Libraries**
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.utils.multiclass import unique_labels

"""**Loading Data**"""

df=pd.read_csv("/content/Dataset .csv")

"""**Filling Missing Values**"""

df['Cuisines'] = df['Cuisines'].fillna('Unknown')
df = df.dropna()

df['Main Cuisine'] = df['Cuisines'].apply(lambda x: x.split(',')[0].strip())

features = ['Has Table booking', 'Has Online delivery', 'Price range', 'Aggregate rating']
df = df[features + ['Main Cuisine']]

df['Has Table booking'] = df['Has Table booking'].map({'Yes': 1, 'No': 0})
df['Has Online delivery'] = df['Has Online delivery'].map({'Yes': 1, 'No': 0})

"""**Handle Missing Values**"""

le = LabelEncoder()
df['Cuisine_Label'] = le.fit_transform(df['Main Cuisine'])

X = df[features]
y = df['Cuisine_Label']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""**Model Building**"""

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

labels = unique_labels(y_test, y_pred)
class_names = le.inverse_transform(labels)
print("Classification Report:\n", classification_report(y_test, y_pred, labels=labels, target_names=class_names))

