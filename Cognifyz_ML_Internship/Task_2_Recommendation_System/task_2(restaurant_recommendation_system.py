# -*- coding: utf-8 -*-
"""Task-2(Restaurant_Recommendation_System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19InaOMSenoklYgfHvGEH8db0GSeTEoVj

**Import Libraries**
"""

import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.neighbors import NearestNeighbors

df = pd.read_csv("/content/Dataset .csv")

"""**Null Value Inspection**"""

df.isnull().sum()

"""**Duplicate Null Value Inspection**"""

df.duplicated().sum()

"""**Handle Missing Values**"""

df['Cuisines'] = df['Cuisines'].fillna('Unknown')

df['content'] = (df['Cuisines'] + ' ' +df['Has Table booking'].astype(str) + ' ' +df['Has Online delivery'].astype(str) + ' ' +df['Price range'].astype(str) + ' ' +df['Aggregate rating'].astype(str))

"""**Model Building**"""

tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(df['content'])

nn_model = NearestNeighbors(metric='cosine', algorithm='brute')
nn_model.fit(tfidf_matrix)

indices = pd.Series(df.index, index=df['Restaurant Name']).drop_duplicates()

def recommend_restaurants(name, n=5):
    if name not in indices:
        return f"Restaurant '{name}' not found."
    idx = indices[name]
    distances, idxs = nn_model.kneighbors(tfidf_matrix[idx], n_neighbors=n+1)
    recommended_idx = idxs.flatten()[1:]
    return df[['Restaurant Name', 'Cuisines', 'Aggregate rating']].iloc[recommended_idx]

"""**Testing**"""

recommend_restaurants("Ooma")

recommend_restaurants("McDonald's")
recommend_restaurants("The Yellow Chilli")